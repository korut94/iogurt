#ifndef OBJECT_H
#define OBJECT_H

#define FORWARD_V3 [0,0,1]

class Object 
{
	var m_cvmObj;
	var m_velocity;
	
	getCVmObj();
	getDirection();
	move(velocity, direction);
	setVelocity(velocity);
	update();
};

function Object::Object() {
	m_cvmObj = CVmObj();
	m_velocity = 0;
}

function Object::getCVmObj() {
	return m_cvmObj;
}

function Object::getDirection() {
	var r = m_cvmObj.GetRotationMatrix();
	
	return MatrixMultiplyVector_3([
		r[0], r[1], r[2],
		r[4], r[5], r[6],
		r[8], r[9], r[10]
	], FORWARD_V3);
}

function Object::move(velocity, direction) {
	setVelocity(velocity);
}

function Object::setVelocity(velocity) {
	m_velocity = velocity;
}

function Object::update() {
	m_cvmObj.SetPosition(m_cvmObj.GetPosition() + m_velocity * getDirection());
}

#endif // OBJECT_H
