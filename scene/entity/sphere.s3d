#ifndef SPHERE_H
#define SPHERE_H

#include "../object.s3d"
#include "../behavior/mono.s3d"

class BHSphere : Mono
{
	var m_sphere;

	onWatch();
};

function BHSphere::BHSphere(sphere) {
	m_sphere = sphere;
}

function BHSphere::onWatch() {
	EventSend(OBJECT_WATCHED, m_sphere);	
}

class Sphere : Object
{
	applyTo(world);
	init();
};

function Sphere::Sphere(radius) {
	var mesh = CVmNewMesh(VRP_SPHERE, 20, radius, 1);
	mesh.CenterBoundingBox();
	
	Sphere::this.getCVmObj().LinkToMesh(mesh);
	Sphere::this.linkToBehavior(BHSphere(Sphere::this));
}

function Sphere::applyTo(world) {
	world.addRootToDraw(Sphere::this.getCVmObj());
	world.trackObject(Sphere::this);
}

function Sphere::init() {
	// Sphere::this.getCVmObj().SetPosition([0, 5, 0]);
}

#endif // SPHERE_H
