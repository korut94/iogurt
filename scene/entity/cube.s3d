#ifndef ENTITY_CUBE_H
#define ENTITY_CUBE_H

#include "../object.s3d"
#include "../behavior/mono.s3d"

class BHCube : Mono
{
	var m_cube;
	
	onWatch();
};

function BHCube::BHCube(cube) {
	m_cube = cube;
}

function BHCube::onWatch() {
	EventSend(OBJECT_WATCHED, m_cube);
}

class Cube : Object
{
	applyTo(world);
	init();
};

function Cube::Cube(width, height, depth, color) {
	var material = CVmMaterial();
	material.Ambient = color;
	var mesh = CVmNewMesh(VRP_BOX, 0, [0,0,0], [width, height, depth]);
	mesh.CenterBoundingBox();
	mesh.ForceMaterial(material);
	
	Cube::this.getCVmObj().LinkToMesh(mesh);
	Cube::this.linkToBehavior(BHCube(Cube::this));
}

function Cube::applyTo(world)
{
	world.addRootToDraw(Cube::this.getCVmObj());
	world.trackObject(Cube::this);
}

function Cube::init() {
	Cube::this.getCVmObj().SetPosition([20, 5, 20]);
}

#endif // ENTITY_CUBE_H
