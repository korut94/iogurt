#ifndef UTILITY_H
#define UTILITY_H

function globalPosition(obj);
function globalRotation(obj);

function toGlobal(obj) {
	var globalObj = CVmObj();
	
	globalObj.SetPosition(globalPosition(obj));
	globalObj.SetRotationMatrix(globalRotation(obj));
	
	var mesh = obj.GetMesh();
	if (mesh != VOID) globalObj.LinkToMesh(mesh);
	
	return globalObj; 
}

function forward(obj) {
	var transform = obj.GetModelMatrix();
	return [transform[8], transform[9], transform[10]];
}

function globalPosition(obj) {
	var transform = obj.GetModelMatrix();
	return [transform[12], transform[13], transform[14]];
}

function globalRotation(obj) {
	var transform = obj.GetModelMatrix();
	return [
		transform[0], transform[1], transform[2], 0,
		transform[4], transform[5], transform[6], 0,
		transform[8], transform[9], transform[10], 0,
		0, 0, 0, 1
	];
}

function linearInterpolation(from, to, p) {
	return from + p * (to - from);
}

function rightward(obj) {
	var transform = obj.GetModelMatrix();
	return [transform[0], transform[1], transform[2]];
}

function sign(number) {
	return (number < 0.0) ? -1 : 1;
}

function upward(obj) {
	var transform = obj.GetModelMatrix();
	return [transform[4], transform[5], transform[6]];
}

#endif // UTILITY_H
