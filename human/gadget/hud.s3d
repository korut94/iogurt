#ifndef HUD_H
#define HUD_H

#include "humangadget.s3d"
#include "interface/mywidget/mobjhandle.s3d"

class Hud : HumanGadget
{
	var m_center;
	var m_deadLine;
	var m_panel;
	var m_radius;
	var m_step;
	
	addHandlePanel(object);
	distanceFromUser();
	getStep(panel);
	handleInput(dispatcher);
	init();
	/*
	 * @brief Turn the panel around the center with a determinded radius. The
	 * step determines the panel places where:
	 * - with 0 the panel is putted in the left side from the center
	 * - with 1 the panel is putted in the right side from the center
	 * - any values from 0 and 1 get a intermedia position (e.g. with 0.5 the panel
	 * will show itself forward the view)
	 * 
	 * In any case, the panel will be rotate so to have its front face looking
	 * the hud's center point.
	 */
	setStep(step, vertical);
};

function Hud::Hud(human) {
	m_deadLine = 0.4;
	m_radius = 2;
	m_center = CVmObj();
	
	var body = human.getPart(BODY_ID).getCVmObj();
	body.AddChild(m_center);
}

function Hud::addHandlePanel(object) {
	if (m_panel == VOID) {
		m_panel = MObjHandle(Hud::this, 0.9, 0.83, object);
		m_center.AddChild(m_panel.getCVmObj());
	
		setStep(0.6, 0);
		EventSend(ADD_OBJECT, m_panel);
	}
}

function Hud::distanceFromUser() {
	return m_radius;
}

function Hud::getStep(panel) {
	return m_step;
}

function Hud::handleInput(dispatcher) {
	dispatcher.on(OBJECT_WATCHED, Caller(Hud::this, "addHandlePanel"));
	
	m_human.handleInput(dispatcher);
}

function Hud::init() {
	m_center.SetPosition([0, 1.5, 0]);
	m_human.init();
}

function Hud::setStep(step, vertical) {
	m_panel.getCVmObj().SetPosition(m_radius * [cos(PI * step), 0, sin(PI * step)]);
	m_panel.getCVmObj().Move([0,vertical,0]);
	m_panel.getCVmObj().SetRotation(180.0 * (0.5 - step), [0,1,0]);
	
	if (m_panel.getCVmObj().GetPosition()[1] > m_deadLine ||
		m_panel.getCVmObj().GetPosition()[1] < -m_deadLine
	) {
		EventSend(REMOVE_OBJECT, m_panel);
		m_panel.getBehavior().onClose();
		m_center.RemoveChild(m_panel.getCVmObj());
		m_panel = VOID;
	}
	
	m_step = step;
}

#endif // HUD_H
