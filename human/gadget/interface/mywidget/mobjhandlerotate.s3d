#ifndef MOBJHANDLEROTATE_H
#define MOBJHANDLEROTATE_H

#include "../../../../scene/object.s3d"
#include "../frame.s3d"
#include "../label.s3d"
#include "mobjsetter.s3d"

class MObjHandleRotate : Object
{
	var m_lbl;
	var m_setterX;
	var m_setterY;
	var m_setterZ;
	
	applyTo(world);
	init();
};

function MObjHandleRotate::MObjHandleRotate() {
	m_lbl = Label("Rotate", [0.035, 0.035, 0.035], [0.9, 0.9, 0.9]);
	m_setterX = MObjSetter("X");
	m_setterY = MObjSetter("Y");
	m_setterZ = MObjSetter("Z");
	
	MObjHandleRotate::this.getCVmObj().AddChild(m_lbl.getCVmObj());
	MObjHandleRotate::this.getCVmObj().AddChild(m_setterX.getCVmObj());
	MObjHandleRotate::this.getCVmObj().AddChild(m_setterY.getCVmObj());
	MObjHandleRotate::this.getCVmObj().AddChild(m_setterZ.getCVmObj());
}

function MObjHandleRotate::applyTo(world) {
	m_setterX.applyTo(world);
	m_setterY.applyTo(world);
	m_setterZ.applyTo(world);
}

function MObjHandleRotate::init() {
	m_setterX.init();
	m_setterY.init();
	m_setterZ.init();
	
	m_lbl.getCVmObj().SetPosition([0.07, 0.07, 0]);
	m_setterX.getCVmObj().SetPosition([0, 0.04, 0]);
	// m_setterY.getCVmObj().SetPosition([0, 0, 0]);
	m_setterZ.getCVmObj().SetPosition([0, -0.04, 0]);
}

#endif // MOBJHANDLEROTATE_H
