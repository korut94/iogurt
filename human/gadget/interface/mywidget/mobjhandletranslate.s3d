#ifndef MOBJHANDLETRANSLATE_H
#define MOBJHANDLETRANSLATE_H

#include "../../../../scene/object.s3d"
#include "../frame.s3d"
#include "../label.s3d"
#include "mobjsetter.s3d"

class MObjHandleTranslate : Object
{
	var m_lbl;
	var m_setterX;
	var m_setterY;
	var m_setterZ;
	var m_target;
	
	applyTo(world);
	displayX();
	displayY();
	displayZ();
	init();
	translate(opts);
};

function MObjHandleTranslate::MObjHandleTranslate(obj) {
	m_lbl = Label("Translate", [0.035, 0.035, 0.035], [0.9, 0.9, 0.9]);
	m_target = obj;
	m_setterX = MObjSetter(
		"X",
		Caller(MObjHandleTranslate::this, "translate", {[0.1,0,0]}),
		Caller(MObjHandleTranslate::this, "translate", {[-0.1,0,0]}),
		Caller(MObjHandleTranslate::this, "displayX")
	);
	m_setterY = MObjSetter(
		"Y",
		Caller(MObjHandleTranslate::this, "translate", {[0,0.1,0]}),
		Caller(MObjHandleTranslate::this, "translate", {[0,-0.1,0]}),
		Caller(MObjHandleTranslate::this, "displayY")
	);
	m_setterZ = MObjSetter(
		"Z",
		Caller(MObjHandleTranslate::this, "translate", {[0,0,0.1]}),
		Caller(MObjHandleTranslate::this, "translate", {[0,0,-0.1]}),
		Caller(MObjHandleTranslate::this, "displayZ")
	);
	
	MObjHandleTranslate::this.getCVmObj().AddChild(m_lbl.getCVmObj());
	MObjHandleTranslate::this.getCVmObj().AddChild(m_setterX.getCVmObj());
	MObjHandleTranslate::this.getCVmObj().AddChild(m_setterY.getCVmObj());
	MObjHandleTranslate::this.getCVmObj().AddChild(m_setterZ.getCVmObj());
}

function MObjHandleTranslate::applyTo(world) {
	m_setterX.applyTo(world);
	m_setterY.applyTo(world);
	m_setterZ.applyTo(world);
}

function MObjHandleTranslate::displayX() {
	return globalPosition(m_target)[0];
}

function MObjHandleTranslate::displayY() {
	return globalPosition(m_target)[1];
}

function MObjHandleTranslate::displayZ() {
	return globalPosition(m_target)[2];
}

function MObjHandleTranslate::init() {
	m_setterX.init();
	m_setterY.init();
	m_setterZ.init();
	
	m_lbl.getCVmObj().SetPosition([0.085, 0.07, 0]);
	m_setterX.getCVmObj().SetPosition([0, 0.04, 0]);
	// m_setterY.getCVmObj().SetPosition([0, 0, 0]);
    m_setterZ.getCVmObj().SetPosition([0, -0.04, 0]);
}

function MObjHandleTranslate::translate(opts) {
	m_target.SetPosition(m_target.GetPosition() + opts[0]);
}

#endif // MOBJHANDLETRANSLATE_H
