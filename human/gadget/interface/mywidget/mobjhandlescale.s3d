#ifndef MOBJHANDLESCALE_H
#define MOBJHANDLESCALE_H

#include "../../../../scene/object.s3d"
#include "../frame.s3d"
#include "../label.s3d"
#include "mobjsetter.s3d"

class MObjHandleScale : Object
{
	var m_lbl;
	var m_setter;
	var m_target;
	
	applyTo(world);
	display();
	init();
	scale(opts);
};

function MObjHandleScale::MObjHandleScale(obj) {
	m_lbl = Label("Scale", [0.035, 0.035, 0.035], [0.9, 0.9, 0.9]);
	m_target = obj;
	m_setter = MObjSetter(
		"F",
		Caller(MObjHandleScale::this, "scale", {0.01}),
		Caller(MObjHandleScale::this, "scale", {-0.01}),
		Caller(MObjHandleScale::this, "display")
	);
	
	MObjHandleScale::this.getCVmObj().AddChild(m_lbl.getCVmObj());
	MObjHandleScale::this.getCVmObj().AddChild(m_setter.getCVmObj());
}

function MObjHandleScale::applyTo(world) {
	m_setter.applyTo(world);
}

function MObjHandleScale::display() {
	return m_target.GetScale()[0];
}

function MObjHandleScale::init() {
	m_setter.init();
	
	m_lbl.getCVmObj().SetPosition([0.06, 0.07, 0]);
	m_setter.getCVmObj().SetPosition([0, 0.04, 0]);
}

function MObjHandleScale::scale(opts) {
	m_target.SetScale(m_target.GetScale()[0] + opts[0]);
}

#endif // MOBJHANDLESCALE_H
